steps:
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "build",
        "-t",
        "${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPOSITORY_NAME}/${_IMAGE_NAME}:${_IMAGE_TAG}",
        "."
      ]

  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "push",
        "${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPOSITORY_NAME}/${_IMAGE_NAME}:${_IMAGE_TAG}"
      ]

  # - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  #   entrypoint: gcloud
  #   args:
  #     [
  #       "run",
  #       "deploy",
  #       "${_SERVICE_NAME}",
  #       "--platform",
  #       "${_PLATFORM}",
  #       "--region",
  #       "${_REGION}",
  #       "--image",
  #       "${_IMAGE_NAME}",
  #       "--add-cloudsql-instances",
  #       "${_PROJECT_ID}:${_REGION}:${_CLOUD_SQL_INSTANCE_NAME}",
  #       "--allow-unauthenticated",
  #     ]

  # - name: 'bash'
  #   script: |
  #     #!/usr/bin/env bash
  #     SERVICE_URL=$(gcloud run services describe ${_SERVICE_NAME} --platform ${_PLATFORM} \
  #       --region ${_REGION} --format "value(status.url)")
  #     echo "CLOUDRUN_SERVICE_URL=$SERVICE_URL" >> /workspace/.env.cloudrun

  # - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  #   entrypoint: gcloud
  #   args:
  #     [
  #       "run",
  #       "services",
  #       "update",
  #       "${_SERVICE_NAME}",
  #       "--plat-form",
  #       "${_PLATFORM}",
  #       "--region",
  #       "${_REGION}",
  #       "--set-env-vars",
  #       "CLOUDRUN_SERVICE_URL=$(cat /workspace/.env.cloudrun | grep CLOUDRUN_SERVICE_URL | cut -d '=' -f 2)",
  #     ]

# images:
#   - "${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPOSITORY_NAME}/${_IMAGE_NAME}:${_IMAGE_TAG}"

substitutions:
  # _PROJECT_ID: django-416415
  _REGION: asia-northeast1
  # _CLOUD_SQL_INSTANCE_NAME: subjective-evaluation
  _ARTIFACT_REGISTRY_REPOSITORY_NAME: docker-repo
  _IMAGE_NAME: test-app-django
  _IMAGE_TAG: latest
  # _SECRET_SETTINGS_NAME: django_settings
  # _SERVICE_NAME: test-app-django
  # _PLATFORM: managed
